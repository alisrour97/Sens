<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab tab_name="Position" containers="1">
   <Container>
    <DockSplitter orientation="-" count="1" sizes="1">
     <DockSplitter orientation="|" count="2" sizes="0.5;0.5">
      <DockArea name="Trajectory">
       <plot flip_x="false" mode="XYPlot" flip_y="false" style="Lines">
        <range right="0.024637" left="-0.075411" top="0.052984" bottom="-0.064428"/>
        <limitY/>
        <curve curve_x="vehicle_local_position/x" name="drone" color="#454955" curve_y="vehicle_local_position/y"/>
        <curve curve_x="vehicle_local_position_setpoint/x" name="ref" color="#e1120f" curve_y="vehicle_local_position_setpoint/y"/>
       </plot>
      </DockArea>
      <DockSplitter orientation="-" count="3" sizes="0.333333;0.333333;0.333333">
       <DockArea name="x">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.024229" bottom="-0.058717"/>
         <limitY/>
         <curve name="vehicle_local_position/x" color="#cd281c"/>
        </plot>
       </DockArea>
       <DockArea name="y">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.019869" bottom="-0.023830"/>
         <limitY/>
         <curve name="vehicle_local_position/y" color="#11b110"/>
        </plot>
       </DockArea>
       <DockArea name="z">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.023141" bottom="-0.107028"/>
         <limitY/>
         <curve name="vehicle_local_position/z" color="#171ec0"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="Vel &amp;&amp; Acc" containers="1">
   <Container>
    <DockSplitter orientation="-" count="3" sizes="0.333333;0.333333;0.333333">
     <DockSplitter orientation="|" count="2" sizes="0.5;0.5">
      <DockArea name="Vx">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="0.048773" bottom="-0.192034"/>
        <limitY/>
        <curve name="vx" color="#e02929"/>
        <curve name="vx_des" color="#51dd24"/>
       </plot>
      </DockArea>
      <DockArea name="...">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="0.496883" bottom="-0.552431"/>
        <limitY/>
        <curve name="vehicle_local_position/ax" color="#1f77b4"/>
        <curve name="ax_des" color="#ff7f0e"/>
       </plot>
      </DockArea>
     </DockSplitter>
     <DockSplitter orientation="|" count="2" sizes="0.5;0.5">
      <DockArea name="Vy">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="0.028298" bottom="-0.137927"/>
        <limitY/>
        <curve name="vy" color="#e02929"/>
        <curve name="vy_des" color="#51dd24"/>
       </plot>
      </DockArea>
      <DockArea name="...">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="0.359974" bottom="-0.425162"/>
        <limitY/>
        <curve name="vehicle_local_position/ay" color="#d62728"/>
        <curve name="ay_des" color="#f14cc1"/>
       </plot>
      </DockArea>
     </DockSplitter>
     <DockSplitter orientation="|" count="2" sizes="0.5;0.5">
      <DockArea name="Vz">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="2.263516" bottom="-1.435443"/>
        <limitY/>
        <curve name="vz" color="#e02929"/>
        <curve name="vz_des" color="#51dd24"/>
       </plot>
      </DockArea>
      <DockArea name="...">
       <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
        <range right="20.400000" left="0.000000" top="102.624206" bottom="-7.592427"/>
        <limitY/>
        <curve name="vehicle_local_position/az" color="#1ac938"/>
        <curve name="az_des" color="#9467bd"/>
       </plot>
      </DockArea>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="Attitude &amp;&amp; Rate" containers="1">
   <Container>
    <DockSplitter orientation="-" count="1" sizes="1">
     <DockSplitter orientation="|" count="2" sizes="0.5;0.5">
      <DockSplitter orientation="-" count="3" sizes="0.333333;0.333333;0.333333">
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.045812" bottom="-0.050551"/>
         <limitY/>
         <curve name="roll" color="#f14cc1"/>
         <curve name="roll_des" color="#9467bd"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.024998" bottom="-0.033688"/>
         <limitY/>
         <curve name="pitch" color="#17becf"/>
         <curve name="pitch_des" color="#bcbd22"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="1.645644" bottom="1.612374"/>
         <limitY/>
         <curve name="yaw" color="#1f77b4"/>
         <curve name="yaw_des" color="#d62728"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockSplitter orientation="-" count="3" sizes="0.333333;0.333333;0.333333">
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.243139" bottom="-0.488701"/>
         <limitY/>
         <curve name="w_roll" color="#1ac938"/>
         <curve name="w_roll_des" color="#ff7f0e"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.248768" bottom="-0.318141"/>
         <limitY/>
         <curve name="w_pitch" color="#f14cc1"/>
         <curve name="w_pitch_des" color="#9467bd"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
         <range right="20.400000" left="0.000000" top="0.049820" bottom="-0.007222"/>
         <limitY/>
         <curve name="w_yaw" color="#17becf"/>
         <curve name="w_yaw_des" color="#bcbd22"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="Inputs" containers="1">
   <Container>
    <DockSplitter orientation="-" count="1" sizes="1">
     <DockArea name="...">
      <plot flip_x="false" mode="TimeSeries" flip_y="false" style="Lines">
       <range right="20.400000" left="0.000000" top="0.782939" bottom="-0.019096"/>
       <limitY/>
       <curve name="actuator_motors/control.00" color="#17becf"/>
       <curve name="actuator_motors/control.01" color="#bcbd22"/>
       <curve name="actuator_motors/control.02" color="#1f77b4"/>
       <curve name="actuator_motors/control.03" color="#d62728"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="3"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="MQTT Subscriber (Mosquitto)"/>
  <plugin ID="ROS Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS /rosout Visualization"/>
  <plugin ID="ROS Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles>
  <fileInfo prefix="" filename="../PX4-Autopilot/build/px4_sitl_default/rootfs/log/2023-06-12/08_29_36.ulg">
   <selected_datasources value=""/>
  </fileInfo>
 </previouslyLoaded_Datafiles>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations>
  <snippet name="az_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/acceleration.02</linked_source>
  </snippet>
  <snippet name="ax_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/acceleration.00</linked_source>
  </snippet>
  <snippet name="w_pitch_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_rates_setpoint/pitch</linked_source>
  </snippet>
  <snippet name="ay_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/acceleration.01</linked_source>
  </snippet>
  <snippet name="w_yaw">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_angular_velocity/xyz.02</linked_source>
  </snippet>
  <snippet name="w_pitch">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_angular_velocity/xyz.01</linked_source>
  </snippet>
  <snippet name="w_roll">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_angular_velocity/xyz.00</linked_source>
  </snippet>
  <snippet name="vy">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position/vy</linked_source>
  </snippet>
  <snippet name="w_pitch_roll">
   <global></global>
   <function>return 0</function>
   <linked_source>vehicle_rates_setpoint/roll</linked_source>
  </snippet>
  <snippet name="vz">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position/vz</linked_source>
  </snippet>
  <snippet name="vx">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position/vx</linked_source>
  </snippet>
  <snippet name="vy_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/vy</linked_source>
  </snippet>
  <snippet name="yaw">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_attitude_setpoint/yaw_body</linked_source>
  </snippet>
  <snippet name="vx_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/vx</linked_source>
  </snippet>
  <snippet name="vz_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_local_position_setpoint/vz</linked_source>
  </snippet>
  <snippet name="pitch">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_attitude_setpoint/pitch_body</linked_source>
  </snippet>
  <snippet name="roll_des">
   <global></global>
   <function>w = value
x = v1
y = v2
z = v3

dcm21 = 2 * (w * x + y * z)
dcm22 = w*w - x*x - y*y + z*z

roll = math.atan(dcm21, dcm22)

return roll</function>
   <linked_source>vehicle_attitude/q.00</linked_source>
   <additional_sources>
    <v1>vehicle_attitude/q.01</v1>
    <v2>vehicle_attitude/q.02</v2>
    <v3>vehicle_attitude/q.03</v3>
   </additional_sources>
  </snippet>
  <snippet name="w_roll_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_rates_setpoint/roll</linked_source>
  </snippet>
  <snippet name="roll">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_attitude_setpoint/roll_body</linked_source>
  </snippet>
  <snippet name="pitch_des">
   <global></global>
   <function>w = value
x = v1
y = v2
z = v3

dcm20 = 2 * (x * z - w * y)

pitch = math.asin(-dcm20)

return pitch</function>
   <linked_source>vehicle_attitude/q.00</linked_source>
   <additional_sources>
    <v1>vehicle_attitude/q.01</v1>
    <v2>vehicle_attitude/q.02</v2>
    <v3>vehicle_attitude/q.03</v3>
   </additional_sources>
  </snippet>
  <snippet name="w_yaw_des">
   <global></global>
   <function>return value</function>
   <linked_source>vehicle_rates_setpoint/yaw</linked_source>
  </snippet>
  <snippet name="yaw_des">
   <global></global>
   <function>w = value
x = v1
y = v2
z = v3

dcm10 = 2 * (x * y + w * z)
dcm00 = w*w + x*x - y*y - z*z

yaw = math.atan(dcm10, dcm00)

return yaw</function>
   <linked_source>vehicle_attitude/q.00</linked_source>
   <additional_sources>
    <v1>vehicle_attitude/q.01</v1>
    <v2>vehicle_attitude/q.02</v2>
    <v3>vehicle_attitude/q.03</v3>
   </additional_sources>
  </snippet>
 </customMathEquations>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

